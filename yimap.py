# -*- coding: utf-8 -*-""" List messages header from IMAPпоиск отправителей в заголовках"""import sysfrom imaplib import IMAP4, IMAP4_SSLimport argparsefrom pathlib import Pathfrom email import parserfrom email.header import decode_headerfrom math import floorIMAPT = IMAP4_SSLdef loadConfig(cf: Path):    for l in cf.open():        passdef doEnvelope(env: bytes, progr=False):    """ Processes RFC822.HEADER env - decode it to utf-8 """    hp = parser.BytesParser()    msg = hp.parsebytes(env, True)    #ct = msg.get_content_charset()    #subj = str(msg['Subject'])    #if ct != None:    #    subj = subj.decode(ct)    fr = None    try:        ff = str(msg['From']).split('@')        lp = ff[0].split('<')[-1]        rp = ff[1].split('>')[0]        print(lp+'@'+rp)    except Exception as e:        pass        #print(f'From error:{e} in {env}', file=sys.stderr)    returndef main(o):    with IMAPT(o.host, o.port) as imap:        print('Connected...', file=sys.stderr)        imap.login(o.user, o.pswd)        print('Logged in...', file=sys.stderr)        _,cnt = imap.select(readonly=True)        res, mlist = imap.search(None, 'ALL')        cnt = int(cnt[0].decode('utf-8'))        print(f"Total {cnt} messages", file=sys.stderr)        mlist = mlist[0].decode().split()        print('Fetching headers...', file=sys.stderr)        if o.progress:            i = 0            sys.stderr.write("   %")            sys.stderr.flush()            for i in range(1,cnt):                sys.stderr.write('\b\b\b\b{:3d}'.format(floor(1.0*i/cnt*100)));                sys.stderr.flush()                hdr = imap.fetch(f'{i:d}', '(RFC822.HEADER)')                doEnvelope(hdr[1][0][1], True)            sys.stderr.write('\n')        else:            hdr = imap.fetch(f'{1:d}:{cnt:d}', '(RFC822.HEADER)')            for h in hdr[1][::2]:                doEnvelope(h[1])    print('Done.', file=sys.stderr)    return    if __name__ == "__main__":    ap = argparse.ArgumentParser(prog='yimap', description='List IMAP headers')    ap.add_argument('-v', action='version', version='%(prog)s 0.1')    ap.add_argument('--host',  '-H', help='IMAP host name', type=str )    ap.add_argument('--port',  '-p', help='IMAP host port number', type=int, default=993 )    ap.add_argument('--user',  '-u', help='IMAP user name', type=str)    ap.add_argument('--pswd',  '-w', help='IMAP user password', type=str)    ap.add_argument('--progress',  '-g', help='show progress on stderr', action='store_true', default=False)    o = ap.parse_args()    if o.host == None or o.port == None or o.user == None or o.pswd == None:        ap.print_help()    else:        try:            main(o)        except IMAP4.error as e:            print('Ошибка: {}', e.args[0].decode('utf-8'))